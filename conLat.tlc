%% File : conLat.tlc
%% Created : Tue Nov 02 17:30:01 2021
%%
%% Description: 
%%   Simulink Coder wrapper functions interface generated for 
%%   S-function "conLat.c".
%%
%%         File generated by S-function Builder Block
%%
%%   For more information on using the Target Language with the 
%%   Simulink Coder, see the Target Language Compiler manual
%%   (under Simulink Coder) in the "Inlining S-Functions"
%%   chapter under the section and subsection:
%%     "Writing Block Target Files to Inline S-Functions",
%%        "Function-Based or Wrappered Code".
%%
%implements  conLat "C"
%% Function: BlockTypeSetup ===================================================
%%
%% Purpose:
%%      Set up external references for wrapper functions in the 
%%      generated code.
%%
%function BlockTypeSetup(block, system) Output
  %openfile externs

    #ifdef __cplusplus
    extern "C" {
    #endif

    extern void conLat_Start_wrapper(void);

    extern void conLat_Outputs_wrapper(const real_T *u0,
			real_T *y0);

    extern void conLat_Terminate_wrapper(void);

    #ifdef __cplusplus
    }
    #endif
  %closefile externs
  %<LibCacheExtern(externs)>
  %%
%endfunction


%% Function: Outputs ==========================================================
%%
%% Purpose:
%%      Code generation rules for mdlOutputs function.
%%
%function Outputs(block, system) Output
  %%
  %assign pu0 = LibBlockInputSignalAddr(0, "", "", 0)
  %assign py0 = LibBlockOutputSignalAddr(0, "", "", 0)
  conLat_Outputs_wrapper(%<pu0>, %<py0>);
  %%
%endfunction


%% [EOF] conLat.tlc

